# Key bindings configuration

# Key bindings for splitting windows
unbind %
bind | split-window -h
unbind '"'
bind - split-window -v

# Key bindings for pane navigation (vim-tmux-navigator)
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
is_zoomed="[ #{window_zoomed_flag} -eq 1 ]"
bind-key -n 'C-h' if-shell "$is_zoomed" 'send-keys C-h' 'if-shell "$is_vim" "send-keys C-h" "select-pane -L"'
bind-key -n 'C-j' if-shell "$is_zoomed" 'send-keys C-j' 'if-shell "$is_vim" "send-keys C-j" "select-pane -D"'
bind-key -n 'C-k' if-shell "$is_zoomed" 'send-keys C-k' 'if-shell "$is_vim" "send-keys C-k" "select-pane -U"'
bind-key -n 'C-l' if-shell "$is_zoomed" 'send-keys C-l' 'if-shell "$is_vim" "send-keys C-l" "select-pane -R"'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Key bindings for resizing panes
bind j resize-pane -D 5
bind k resize-pane -U 5
bind l resize-pane -R 5
bind h resize-pane -L 5
bind -r m resize-pane -Z

# swap window to left or right
bind-key -r < swap-window -t -1\; select-window -t .
bind-key -r > swap-window -t +1\; select-window -t .

# Copy mode key bindings
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi V send-keys -X select-line
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"

# Plugin key bindings
# tmux-resurrect shortcuts
set -g @resurrect-save 'prefix + S'
set -g @resurrect-restore 'prefix + R'

# tmux-sessionist key bindings:
# prefix + g - create new session and switch to it
# prefix + C - create new session (don't switch)
# prefix + X - kill current session
# prefix + S - session picker (list all sessions)
# prefix + @ - promote current window to new session

bind-key M new-window -n monitor -c "#{pane_current_path}" "btop"
bind-key G new-window -n lazygit -c "#{pane_current_path}" "lazygit"
bind-key D new-window -n lazydocker -c "#{pane_current_path}" "lazydocker"
